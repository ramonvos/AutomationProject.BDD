// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomationProject.BDD.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ICarrosPesquisa")]
    public partial class ICarrosPesquisaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ICarrosPesquisa.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ICarrosPesquisa", "\tEu como cliente interessado em comprar um veículo,\r\n\tdesejo pesquisar por veicul" +
                    "os novos, usados e com financiamento \r\n\te visualizar os veiculos disponíveis no " +
                    "sistema.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("Que estou na tela de consulta de veiculos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pesquisar veiculos para compra")]
        [NUnit.Framework.TestCaseAttribute("Carro", "Novo", "Fiat", "Palio", "Belo Horizonte", "0", "20.000", "2000", "2018", null)]
        [NUnit.Framework.TestCaseAttribute("Carro", "Usado", "Volkswagem", "Gol", "Belo Horizonte", "0", "20.000", "2000", "2018", null)]
        [NUnit.Framework.TestCaseAttribute("Carro", "Novo", "Ford", "Fiesta", "Belo Horizonte", "0", "20.000", "2000", "2018", null)]
        public virtual void PesquisarVeiculosParaCompra(string tipoVeiculo, string situacaoVeiculo, string marcaVeiculo, string modeloVeiculo, string cidadeVeiculo, string precoDe, string precoAte, string anoDe, string anoAte, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pesquisar veiculos para compra", exampleTags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 12
 testRunner.And(string.Format("que o usuario informe os seguintes filtros: {0}, {1}, {2},{3}, {4}, {5}, {6},{7}," +
                        "{8}", tipoVeiculo, situacaoVeiculo, marcaVeiculo, modeloVeiculo, cidadeVeiculo, precoDe, precoAte, anoDe, anoAte), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.Then("clico em buscar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.When("o sistema apresenta a listagem de veículos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
